{"version":3,"sources":["Services/API.js","components/search-result-entry/search-result-entry.component.jsx","components/error-message/error-message.component.jsx","components/professor-settings/professor-settings.component.jsx","assets/logo.png","components/loading-animation/loading-animation.component.jsx","assets/logo_icon.png","components/search-page/search-page.component.jsx","components/learning-clues.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["dev","api","apisauce","create","baseURL","searchEnable","enabled","class_id","post","uploadNotificationEnable","user_id","weeklyReportEnable","getLeccapClass","leccap_site_key","get","getUser","email","getUserClassSettings","search","q","getVidTranscript","vid_id","leccapLogin","message","SearchResultEntry","props","fetchTranscript","vid","API","then","response","ok","Error","statusText","data","setState","transcript","full_transcript","catch","error","console","viewFullTranscript","event","preventDefault","state","expand","videoStartTime","display","autoplay","expandAndPlay","toggleExpandShrink","jumpToTimeAt","time","displayTranscript","displayTimeContext","this","name","date","imageUrl","videoUrl","timestamps","uploadSrc","embedToken","embedUrl","replace","timeArr","contextArr","timeContext","obj","timePoint","Math","floor","Object","keys","context","values","push","momentId","timeContextEntries","entries","map","element","className","onClick","Date","toISOString","substr","src","loading","title","frameBorder","allow","allowFullScreen","width","height","alt","substring","length","type","color","React","Component","ErrorMsg","displayTerm","Alert","severity","AlertTitle","SettingsMenu","handleEnableSearch","search_enabled","handleUploadNotifications","upload_notifications","handleWeeklyReports","weekly_reports","reports_enabled","toggleSettings","initial_disable","SettingsBtn","Button","rel","FormGroup","Tooltip","placement","FormControlLabel","disabled","control","Checkbox","checked","onChange","label","LoadingAnimation","logo","SearchPage","handleSubmit","searchCount","course_id","queryTerm","recordings","definition","apiResponse","handleChange","target","value","clearSearch","canvas_user_id","user_username","user_login_id","unique_name","site_key","FeedbackBtn","href","settingProps","searchForm","onSubmit","logoIcon","placeholder","is_instructor","resultId","allResults","LearningClues","uniquename","owner_manager","App","document","querySelector","content","userToken","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.30187028.chunk.js","sourcesContent":["import apisauce from 'apisauce'\n\nexport default (dev) => {\n\n    const api = apisauce.create({\n\t    baseURL: dev ? \"http://clapp1-dev.eba-bfkixsew.us-east-2.elasticbeanstalk.com/\" : \"https://clues.engin.umich.edu/\" // Prod link here\n    })\n\n    const searchEnable = (enabled, class_id) => api.post('api/search_enable/', {\n        enabled,\n        class_id\n    })\n\n    const uploadNotificationEnable = (enabled, class_id, user_id) => api.post('api/upload_notification_enable/', {\n        enabled,\n        class_id,\n        user_id\n    })\n\n    const weeklyReportEnable = (enabled, class_id, user_id) => api.post('api/weekly_report_enable/', {\n        enabled,\n        class_id,\n        user_id\n    })\n\n    const getLeccapClass = (leccap_site_key) => api.get('api/get_class_leccap/', {\n        leccap_site_key\n    })\n\n    const getUser = (email) => api.get('api/get_user/', {\n        email\n    })\n\n    const getUserClassSettings = (user_id, class_id) => api.get('api/get_user_class_settings/', {\n        user_id,\n        class_id\n    })\n\n    const search = (class_id, q) => api.get('api/search/', {\n        class_id,\n        q // query term\n    })\n\n    const getVidTranscript = (vid_id) => api.get('api/get_vid_transcript/', {\n        vid_id\n    })\n\n    const leccapLogin = (message) => api.post('api/leccap_login/', {\n        message\n    })\n\n    return {\n        searchEnable,\n        uploadNotificationEnable,\n        weeklyReportEnable,\n        getLeccapClass,\n        getUser,\n        getUserClassSettings,\n        search,\n        getVidTranscript,\n        leccapLogin\n    }\n\n}\n","// Search result entry component that used in main search page\n\nimport React from \"react\";\nimport \"./search-result-entry.styles.scss\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\nimport API from \"../../Services/API\";\n\nclass SearchResultEntry extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expand: false,\n      autoplay: false,\n      videoStartTime: 0,\n      transcript: \"\",\n      display: \"moments\",\n    };\n  }\n\n  fetchTranscript = () => {\n    const { vid, dev } = this.props;\n    API(dev)\n      .getVidTranscript(vid)\n      .then((response) => {\n        if (!response.ok) throw Error(response.statusText);\n        return response.data;\n      })\n      .then((data) => {\n        this.setState({\n          transcript: data.transcript.full_transcript,\n        });\n      })\n      .catch((error) => console.error(error));\n  };\n\n  viewFullTranscript = (event) => {\n    event.preventDefault();\n    const { transcript } = this.state;\n    if (transcript === \"\") {\n      this.fetchTranscript();\n    }\n    this.setState({\n      expand: true,\n      videoStartTime: 0,\n      display: \"moments\",\n      autoplay: false,\n    });\n  };\n\n  expandAndPlay = (event) => {\n    event.preventDefault();\n    const { transcript } = this.state;\n    if (transcript === \"\") {\n      this.fetchTranscript();\n    }\n    this.setState({\n      expand: true,\n      videoStartTime: 0,\n      display: \"moments\",\n      autoplay: true,\n    });\n  };\n\n  toggleExpandShrink = (event) => {\n    event.preventDefault();\n    const { expand, transcript } = this.state;\n    if (transcript === \"\") {\n      this.fetchTranscript();\n    }\n    this.setState({\n      expand: !expand,\n      videoStartTime: 0,\n      display: \"moments\",\n      autoplay: false,\n    });\n  };\n\n  jumpToTimeAt = (event, time) => {\n    event.preventDefault();\n    this.setState({ videoStartTime: time, autoplay: true });\n  };\n\n  displayTranscript = (event) => {\n    event.preventDefault();\n    const { transcript } = this.state;\n    if (transcript === \"\") {\n      this.fetchTranscript();\n    }\n    this.setState({ display: \"transcript\" });\n  };\n\n  displayTimeContext = (event) => {\n    event.preventDefault();\n    this.setState({ display: \"moments\" });\n  };\n\n  render() {\n    const {\n      name,\n      date,\n      imageUrl,\n      videoUrl,\n      timestamps,\n      uploadSrc,\n      embedToken,\n    } = this.props;\n\n    const { expand, autoplay, videoStartTime, transcript, display } =\n      this.state;\n\n    // generate the embedURL: should has the latest embed token\n    let embedUrl =\n      uploadSrc === \"leccap\"\n        ? `${videoUrl}?identity=${embedToken}&mode=embed#goto=${videoStartTime}`\n        : videoUrl.replace(\"watch?v=\", \"embed/\");\n\n    // process and propulate the moments tab content\n    const timeArr = [];\n    const contextArr = [];\n    const timeContext = {};\n    for (let obj of timestamps) {\n      let timePoint = Math.floor(+Object.keys(obj)[0]);\n      let context = Object.values(obj)[0].context;\n      timeArr.push(timePoint);\n      contextArr.push(context);\n      timeContext[timePoint] = context;\n    }\n\n    let momentId = 0;\n    // moments cotains: time, context\n    let timeContextEntries = Object.entries(timeContext).map((element) => {\n      return (\n        <div\n          key={momentId++}\n          className=\"time-context-item\"\n          onClick={(event) => this.jumpToTimeAt(event, element[0])}\n        >\n          <div className=\"time\">\n            {new Date(element[0] * 1000).toISOString().substr(11, 8)}\n          </div>\n          <div className=\"context\">{`\"${element[1]}\"`}</div>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"search-result-entry\">\n        {/* show video cover image or iframe based on expand */}\n        {expand ? (\n          <div className=\"video-player\">\n            <iframe\n              src={\n                uploadSrc === \"leccap\"\n                  ? `${embedUrl}`\n                  : autoplay\n                  ? embedUrl + `?start=${videoStartTime}&rel=0&autoplay=1`\n                  : embedUrl + `?start=${videoStartTime}&rel=0&autoplay=0`\n              }\n              loading=\"lazy\"\n              title={name}\n              frameBorder=\"0\"\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n              allowFullScreen\n              width=\"600px\"\n              height=\"400px\"\n            ></iframe>\n            <div className=\"video-player-footer\"></div>\n          </div>\n        ) : (\n          <img\n            src={imageUrl}\n            onClick={this.expandAndPlay}\n            alt={imageUrl === \"\" ? `Lecture thumbnail does not exist` : name}\n            width=\"450px\"\n            height=\"300px\"\n          />\n        )}\n\n        {/* entry details contain: video info + moments/transcript */}\n        <div className=\"entry-details\">\n          <span className=\"video-name\">{name}</span>\n          <span className=\"video-date\">\n            {date.substring(5, date.length - 13)}\n          </span>\n          {expand ? (\n            <div>\n              <div className=\"nav-buttons\">\n                <button\n                  className={\n                    display === \"moments\" ? \"selected-button\" : \"moments-button\"\n                  }\n                  type=\"submit\"\n                  onClick={this.displayTimeContext}\n                >\n                  Moments\n                </button>\n                <button\n                  className={\n                    display === \"transcript\"\n                      ? \"selected-button\"\n                      : \"transcript-button\"\n                  }\n                  type=\"submit\"\n                  onClick={this.displayTranscript}\n                >\n                  Transcript\n                </button>\n              </div>\n              {display === \"moments\" ? (\n                <div className=\"time-context-entries\">{timeContextEntries}</div>\n              ) : (\n                <div className=\"full-transcript\">{transcript}</div>\n              )}\n            </div>\n          ) : (\n            <div>\n              <div className=\"first-context\">{contextArr[0]}</div>\n              <button\n                className=\"view-transcript-button\"\n                type=\"submit\"\n                onClick={this.viewFullTranscript}\n              >\n                View Relevant Moments\n              </button>\n            </div>\n          )}\n\n          {/* footer contains: card toggle button */}\n          <footer className=\"entry-details-fotter\">\n            <button className=\"new-tab-button\" type=\"submit\">\n              Open in a new tab\n            </button>\n            <button\n              className=\"expand-shrink-button\"\n              type=\"submit\"\n              onClick={this.toggleExpandShrink}\n            >\n              {expand ? (\n                <ArrowDropUpIcon color=\"action\" />\n              ) : (\n                <ArrowDropDownIcon color=\"action\" />\n              )}\n            </button>\n          </footer>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchResultEntry;\n","// error message box that only displayed when error prop is true\n\nimport React from \"react\";\nimport \"./error-message.styles.scss\";\n\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\n\nconst ErrorMsg = ({ displayTerm }) => {\n  return (\n    <div className=\"error-msg\">\n      <Alert severity=\"warning\">\n        <AlertTitle className=\"msg\">\n          <strong>{`Your search term \"${displayTerm}\" did not match any recordings, please try again.`}</strong>\n        </AlertTitle>\n        <div className=\"suggestion\">\n          <strong>Suggestions:</strong>\n          <ul>\n            <li>Check the spellings</li>\n            <li>Try a different term</li>\n            <li>Try a shorter term</li>\n          </ul>\n        </div>\n      </Alert>\n    </div>\n  );\n};\n\nexport default ErrorMsg;\n","import React from \"react\";\nimport { FormGroup, FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport { Button } from \"react-bootstrap\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport \"./professor-settings.styles.scss\";\nimport API from \"../../Services/API\";\n\nclass SettingsMenu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expand: true,\n      search_enabled: this.props.search_enabled,\n      weekly_reports: this.props.weekly_reports,\n      upload_notifications: this.props.upload_notifications,\n      initial_disable: this.props.initial_disable,\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.initial_disable !== state.initial_disable) {\n      return {\n        search_enabled: props.search_enabled,\n        weekly_reports: props.weekly_reports,\n        upload_notifications: props.upload_notifications,\n        initial_disable: props.initial_disable,\n      };\n    }\n    return null;\n  }\n\n  handleEnableSearch = () => {\n    const { class_id, dev } = this.props;\n    const { search_enabled } = this.state;\n    let enabled = false;\n    if (!search_enabled) {\n      enabled = true;\n    }\n    this.setState({\n      search_enabled: enabled,\n    });\n    API(dev)\n      .searchEnable(enabled, class_id)\n      .then((response) => {\n        if (!response.ok) throw Error(response.statusText);\n        return response.data;\n      })\n      .catch((data) => {\n        this.setState({\n          search_enabled: !enabled,\n        });\n      });\n  };\n\n  handleUploadNotifications = () => {\n    const { upload_notifications } = this.state;\n    const { class_id, user_id, dev } = this.props;\n    let enabled = false;\n    if (!upload_notifications) {\n      enabled = true;\n    }\n    this.setState({\n      upload_notifications: enabled,\n    });\n    API(dev)\n      .uploadNotificationEnable(enabled, class_id, user_id)\n      .then((response) => {\n        if (!response.ok) throw Error(response.statusText);\n        return response.data;\n      })\n      .catch((data) => {\n        this.setState({\n          upload_notifications: !enabled,\n        });\n      });\n  };\n\n  handleWeeklyReports = () => {\n    const { weekly_reports } = this.state;\n    const { class_id, user_id, dev } = this.props;\n    let enabled = false;\n    if (!weekly_reports) {\n      enabled = true;\n    }\n    this.setState({\n      weekly_reports: enabled,\n    });\n    API(dev)\n      .weeklyReportEnable(enabled, class_id, user_id)\n      .then((response) => {\n        if (!response.ok) throw Error(response.statusText);\n        return response.data;\n      })\n      .catch((data) => {\n        this.setState({\n          weekly_reports: !data.reports_enabled,\n        });\n      });\n  };\n\n  toggleSettings = (event) => {\n    event.preventDefault();\n    const { expand } = this.state;\n    this.setState({ expand: !expand });\n  };\n\n  render() {\n    const { expand, search_enabled } = this.state;\n\n    const { initial_disable } = this.props;\n\n    const SettingsBtn = () => {\n      return (\n        <Button\n          className=\"settings-button\"\n          rel=\"noopener noreferrer\"\n          onClick={this.toggleSettings}\n        >\n          <span> Instructor Options </span>\n          <SettingsIcon />\n        </Button>\n      );\n    };\n\n    return (\n      <div className=\"settings\">\n        <SettingsBtn />\n        {expand ? (\n          <FormGroup className=\"settings-options\">\n            <Tooltip\n              title=\"You can disable student search during quizs or exams\"\n              placement=\"bottom\"\n            >\n              <FormControlLabel\n                disabled={initial_disable}\n                control={\n                  <Checkbox\n                    checked={search_enabled}\n                    onChange={this.handleEnableSearch}\n                    name=\"search_enabled\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Enable Student Searches\"\n              />\n            </Tooltip>\n            {/* <FormControlLabel\n              disabled={initial_disable}\n              control={\n                <Checkbox\n                  checked={weekly_reports}\n                  onChange={this.handleWeeklyReports}\n                  name=\"weekly_reports\"\n                  color=\"primary\"\n                />\n              }\n              label=\"Send me weekly reports\"\n            /> */}\n            {/* <FormControlLabel\n              disabled={initial_disable}\n              control={\n                <Checkbox\n                  checked={upload_notifications}\n                  onChange={this.handleUploadNotifications}\n                  name=\"upload_notifications\"\n                  color=\"primary\"\n                />\n              }\n              label=\"Send me upload notifications\"\n            /> */}\n          </FormGroup>\n        ) : (\n          ``\n        )}\n      </div>\n    );\n  }\n}\n\nexport default SettingsMenu;\n","export default __webpack_public_path__ + \"static/media/logo.90a3a46e.png\";","import React from \"react\";\nimport logo from \"../../assets/logo.png\";\nimport \"./loading-animation.styles.scss\";\n\nconst LoadingAnimation = () => {\n  return (\n    <div className=\"logo-spinner\">\n      <img className=\"logo\" src={logo} alt=\"logo\" width=\"300px\"></img>\n      <div className=\"dot-pulse\"></div>\n    </div>\n  );\n};\n\nexport default LoadingAnimation;\n","export default __webpack_public_path__ + \"static/media/logo_icon.01b372da.png\";","// main search page component, check App.js for embed example\r\n\r\nimport React from \"react\";\r\n\r\nimport SearchResultEntry from \"../search-result-entry/search-result-entry.component\";\r\nimport ErrorMsg from \"../error-message/error-message.component\";\r\nimport SettingsMenu from \"../professor-settings/professor-settings.component\";\r\nimport LoadingAnimation from \"../loading-animation/loading-animation.component\";\r\nimport \"./search-page.styles.scss\";\r\nimport logoIcon from \"../../assets/logo_icon.png\";\r\nimport API from \"../../Services/API\";\r\n\r\nimport { Button } from \"react-bootstrap\";\r\nimport FeedbackIcon from \"@material-ui/icons/Feedback\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nclass SearchPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      course_id: this.props.course_id,\r\n      canvas_user_id: this.props.canvas_user_id,\r\n      user_username: this.props.user_username,\r\n      user_login_id: this.props.user_login_id,\r\n\r\n\r\n      // below are for search page\r\n      searchCount: 0,\r\n      apiResponse: {},\r\n      queryTerm: \"\",\r\n      displayTerm: \"\",\r\n      definition: \"\",\r\n      error: false,\r\n      loading: false,\r\n\r\n      // LEGACY\r\n      // What to do with settings?\r\n      // below are for professor settings\r\n      class_id: null,\r\n      user_id: null,\r\n      email: this.props.unique_name + \"@umich.edu\",\r\n      site_key: this.props.site_key,\r\n      search_enabled: false,\r\n      weekly_reports: false,\r\n      upload_notifications: false,\r\n      initial_disable: true,\r\n    };\r\n  }\r\n\r\n  // LEGACY CODE\r\n\r\n  // componentDidMount() {\r\n  //   // get class id and professor settings\r\n  //   let cur_class_id = null;\r\n  //   let cur_user_id = null;\r\n  //   API(this.props.dev)\r\n  //     .getLeccapClass(this.state.site_key)\r\n  //     .then((response) => {\r\n  //       if (!response.ok) throw Error(response.statusText);\r\n  //       return response.data;\r\n  //     })\r\n  //     .then((data) => {\r\n  //       this.setState({\r\n  //         search_enabled: data.search_enabled,\r\n  //         class_id: data.class_id,\r\n  //       });\r\n  //       cur_class_id = data.class_id;\r\n  //       API(this.props.dev)\r\n  //         .getUser(this.state.email)\r\n  //         .then((response) => {\r\n  //           if (!response.ok) throw Error(response.statusText);\r\n  //           return response.data;\r\n  //         })\r\n  //         .then((data) => {\r\n  //           this.setState({\r\n  //             user_id: data.user_id,\r\n  //           });\r\n  //           cur_user_id = data.user_id;\r\n  //           API(this.props.dev)\r\n  //             .getUserClassSettings(cur_user_id, cur_class_id)\r\n  //             .then((response) => {\r\n  //               if (!response.ok) throw Error(response.statusText);\r\n  //               return response.data;\r\n  //             })\r\n  //             .then((data) => {\r\n  //               this.setState({\r\n  //                 initial_disable: false,\r\n  //                 upload_notifications: data.upload_notification,\r\n  //                 weekly_reports: data.weekly_report,\r\n  //               });\r\n  //             });\r\n  //         });\r\n  //     })\r\n  //     .catch((error) => console.log(error));\r\n  // }\r\n\r\n  handleSubmit = (event) => {\r\n    // submit queryTerm\r\n    event.preventDefault();\r\n    const { searchCount, course_id, queryTerm } = this.state;\r\n    if (queryTerm !== \"\") {\r\n      // set loading to display spinner\r\n      this.setState({ loading: true });\r\n      API(this.props.dev)\r\n        .search(course_id, queryTerm)\r\n        .then((response) => {\r\n          if (!response.ok) throw Error(response.statusText);\r\n          return response.data;\r\n        })\r\n        .then((data) => {\r\n          if (\r\n            // deal with queryTerm not found, set error to display error msg\r\n            !data.recordings[queryTerm] ||\r\n            Object.keys(data.recordings[queryTerm]).length === 0\r\n          ) {\r\n            this.setState({\r\n              error: true,\r\n              displayTerm: queryTerm,\r\n              loading: false,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              searchCount: searchCount + 1,\r\n              definition: data.definition,\r\n              apiResponse: data.recordings[queryTerm],\r\n              displayTerm: queryTerm,\r\n              error: false,\r\n              loading: false,\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => console.error(error));\r\n    }\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    // handle user input to the search bar\r\n    event.preventDefault();\r\n    this.setState({ queryTerm: event.target.value });\r\n  };\r\n\r\n  clearSearch = (event) => {\r\n    // clear current search\r\n    event.preventDefault();\r\n    this.setState({\r\n      searchCount: 0,\r\n      error: false,\r\n      queryTerm: \"\",\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // feedback button\r\n    const FeedbackBtn = () => {\r\n      return (\r\n        <Button\r\n          className=\"feedback-button\"\r\n          href=\"https://forms.gle/PRZDceU3AfWmZW7j9\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <span> Send Feedback </span>\r\n          <FeedbackIcon />\r\n        </Button>\r\n      );\r\n    };\r\n\r\n    const {\r\n      searchCount,\r\n      apiResponse,\r\n      displayTerm,\r\n      error,\r\n      loading,\r\n      ...settingProps\r\n    } = this.state;\r\n\r\n    // search header contains: logo, search bar, feedback button, spinner\r\n    const searchForm = (\r\n      <div className=\"header\">\r\n        <form className=\"search-form\" onSubmit={this.handleSubmit}>\r\n          <div className=\"search-flex\">\r\n            <img\r\n              className=\"logo-icon\"\r\n              src={logoIcon}\r\n              alt=\"logoIcon\"\r\n              width=\"50px\"\r\n              onClick={this.clearSearch}\r\n            ></img>\r\n            <input\r\n              className=\"search-bar\"\r\n              placeholder={\"Search for a term or phrase\"}\r\n              onChange={this.handleChange}\r\n              type={\"text\"}\r\n              value={this.state.queryTerm}\r\n            />\r\n            <button\r\n              className=\"search-button\"\r\n              type={\"submit\"}\r\n              onSubmit={this.handleSubmit}\r\n            >\r\n              <SearchIcon color=\"action\" />\r\n            </button>\r\n            {this.props.is_instructor ? (\r\n              <SettingsMenu dev={this.props.dev} {...settingProps} />\r\n            ) : (\r\n              ``\r\n            )}\r\n          </div>\r\n          <FeedbackBtn />\r\n        </form>\r\n      </div>\r\n    );\r\n\r\n    let resultId = 0;\r\n    // process and populate apiResponse\r\n    let allResults = Object.keys(apiResponse).map((element) => (\r\n      <SearchResultEntry\r\n        key={resultId++}\r\n        vid={element}\r\n        name={apiResponse[element][\"title\"]}\r\n        date={apiResponse[element][\"vid_date\"]}\r\n        imageUrl={apiResponse[element][\"image\"]}\r\n        videoUrl={apiResponse[element][\"video_link\"]}\r\n        embedToken={this.props.embedToken}\r\n        timestamps={apiResponse[element][\"timestamps\"]}\r\n        uploadSrc={apiResponse[element][\"upload_src\"]}\r\n        dev={this.props.dev}\r\n      ></SearchResultEntry>\r\n    ));\r\n\r\n    if (loading) {\r\n      return <LoadingAnimation />;\r\n    }\r\n\r\n    if (error) {\r\n      return (\r\n        <div>\r\n          {searchForm}\r\n          <ErrorMsg displayTerm={displayTerm} />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (searchCount === 0) {\r\n      return <div>{searchForm}</div>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {searchForm}\r\n        <div className=\"search-results\">\r\n          <div className=\"term-definition\">\r\n            {/* <div className=\"term\">{`Term: \"${displayTerm}\"`}</div> */}\r\n            <div className=\"definition\">{`${this.state.definition}`}</div>\r\n          </div>\r\n          <div className=\"result-list\">{allResults}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchPage;\r\n","import React from \"react\";\nimport SearchPage from \"./search-page/search-page.component\";\nimport LoadingAnimation from \"./loading-animation/loading-animation.component\";\n\nclass LearningClues extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      course_id: this.props.course_id,\n      canvas_user_id: this.props.canvas_user_id,\n      user_username: this.props.user_username,\n      user_login_id: this.props.user_login_id,\n      is_instructor: this.props.is_instructor,\n\n      site_key: null,\n      uniquename: null,\n      owner_manager: false,\n    };\n  }\n\n  // LEGACY CODE\n\n  // componentDidMount() {\n  //   let { userToken, dev } = this.props;\n\n  //   API(dev)\n  //     .leccapLogin(userToken)\n  //     .then((response) => {\n  //       if (!response.ok) throw Error(response.statusText);\n  //       console.log(response.data)\n  //       return response.data;\n  //     })\n  //     .then((data) => {\n  //       this.setState({\n  //         site_key: data.site_key,\n  //         uniquename: data.uniquename,\n  //         owner_manager: data.success,\n  //       });\n  //     })\n  //     .catch((error) => console.log(error));\n  // }\n\n  render() {\n    // LEGACY\n\n    // const { site_key, uniquename } = this.state;\n\n    // if (site_key === null || uniquename === null) {\n    //   return <LoadingAnimation />;\n    // }\n\n    // END LEGACY\n\n    const { user_login_id, course_id } = this.state;\n\n    if (user_login_id === null || course_id === null) {\n        return <LoadingAnimation />;\n    }\n\n    return (\n      <div>\n        <SearchPage\n          course_id={course_id}\n          canvas_user_id={this.state.canvas_user_id}\n          user_username={this.state.user_username}\n          user_login_id={user_login_id}\n          is_instructor={this.state.is_instructor}\n\n          site_key={this.state.site_key}\n          unique_name={this.state.uniquename}\n          embedToken={this.props.embedToken}\n          owner_manager={this.state.owner_manager}\n          dev={this.props.dev}\n        />\n      </div>\n    );\n  }\n}\n\nexport default LearningClues;\n","import './App.css';\nimport LearningClues from './components/learning-clues.component';\n\nfunction App() {\n  let course_id = document.querySelector('meta[name=\"course_id\"]').content;\n\n  let canvas_user_id = document.querySelector('meta[name=\"canvas_user_id\"]').content;\n  \n  let user_username = document.querySelector('meta[name=\"user_username\"]').content;\n  \n  let user_login_id = document.querySelector('meta[name=\"user_login_id\"]').content;\n\n  let is_instructor = (document.querySelector('meta[name=\"is_instructor\"]').content === 'True');\n\n  // LEGACY: hard-coded CAEN tokens\n  // last for 4 hrs\n  let userToken = `ekx4TFF5QVJiL2l6dW9jclRoRTNSOUxqMDN4ZmoxZjRlaGlRUmJJb3kzRXhGNEhjeW5BUU5QQ0dkY2VGWjhteHhXVDRKbWhIRjdMcEVRenFYZndDMFFySll3NXVmRVVma1hVckFnSi9BNWVQUU1CajZxMmFaYzMxWmxkUFRqY2g5VEpEWTU3V0N3bHdMWU1CWGN2aTdia3Ztbk9RQ0NobzBTWTRoN0E9`;\n\n  let embedToken = `SERhZm5taTFiYm9aejFJUDNsOENVaEpXYWN4Z0hGZUlnU3U1VExlaVA1VXVYa3BuZnlyNEg1UzJNY2NoOUZ0VndEY3RyTGNXNThsbkN4SnlVVlpEKzdLZkhvakt2eEE9`;\n  // END LEGACY TOKENS\n\n  // hardcoded env type to be production\n  let dev = false;\n\n  return (\n    <div className=\"App\">\n      <LearningClues \n        course_id={course_id}\n        canvas_user_id={canvas_user_id}\n        user_username={user_username}\n        user_login_id={user_login_id}\n        is_instructor={is_instructor}\n\n        dev={dev}\n        userToken={userToken} embedToken={embedToken} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}